trigger: 
  none

pool:
  vmImage: 'windows-latest'

parameters:
- name: Deployment_Environment
  displayName: Deployment Environment
  default: DEV
  type: string
  values:
  - QA
  - DEV

jobs:
- job: build_and_deploy
  displayName: 'Build and Deploy Web API'
 
  steps:
  - checkout: self
 
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      version: '8.x'

  - task: NuGetCommand@2
    displayName: NuGet Restore
    inputs:
      restoreSolution: '**/*.sln'
      feedsToUse: 'select'

  - task: MSBuild@1
    inputs:
      solution: '**/*.sln'
      configuration: 'Release'
      restoreNugetPackages: true
      createLogFile: true
      logFileVerbosity: 'detailed'
      
  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'


  - ${{ if eq(parameters.Deployment_Environment, 'DEV') }}:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '<AzureSubscriptionName>' # Replace with your Azure subscription name or service connection
        appType: 'webApp'
        WebAppName: '<YourDevWebAppName>' # Replace with your Azure Web App name for DEV environment
        packageForLinux: '$(Build.ArtifactStagingDirectory)/*'
        enableCustomDeployment: true
        DeploymentType: 'webDeploy'


  - ${{ if eq(parameters.Deployment_Environment, 'QA') }}:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '<AzureSubscriptionName>' # Replace with your Azure subscription name or service connection
        appType: 'webApp'
        WebAppName: '<YourQaWebAppName>' # Replace with your Azure Web App name for QA environment
        packageForLinux: '$(Build.ArtifactStagingDirectory)/*'
        enableCustomDeployment: true
        DeploymentType: 'webDeploy'
